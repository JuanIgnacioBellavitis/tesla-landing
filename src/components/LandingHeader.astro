---
import Logo from "./Logo.astro";
import EnergiaHeader from "./header_components/EnergiaHeader.astro";
import VehiculosHeader from "./header_components/VehiculosHeader.astro";
import CargaHeader from "./header_components/CargaHeader.astro";
import DescubrirHeader from "./header_components/DescubrirHeader.astro";
---

<header
    id="landing-header"
    class="landing-section py-2 px-10 flex items-center fixed top-0 w-full justify-between z-40 text-white"
>
    <div class="flex flex-grow basis-0">
        <Logo />
    </div>
    <nav>
        <ul
            class="flex text-sm [&>li>a]:text-current [&>li>a]:inline-block [&>li>a]:px-2 [&>li>a]:py-2 [&>li>a]:font-medium"
        >
            <li><a href="#">Vehiculos</a></li>
            <li><a href="#">Energía</a></li>
            <li><a href="#">Carga</a></li>
            <li><a href="#">Descubrir</a></li>
            <li><a href="#">We, Robot</a></li>
        </ul>
    </nav>
    <nav
        class="flex flex-grow basis-0 justify-end [&>li>a]:text-current [&>li>a]:inline-block [&>li>a]:px-2 [&>li>a]:py-2 [&>li>a]:font-medium"
    >
        <ul class="flex">
            <li>
                <a href="">
                    <svg
                        class="h-6 w-10"
                        viewBox="0 0 24 24"
                        xmlns="http://www.w3.org/2000/svg"
                        ><path
                            fill="currentColor"
                            d="M12 20.5a8.5 8.5 0 1 1 0-17 8.5 8.5 0 0 1 0 17m0 1.5c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12s4.477 10 10 10m0-6a1 1 0 1 0 0 2 1 1 0 0 0 0-2m.053-3.533a8 8 0 0 1 .92-.767 7 7 0 0 0 .746-.61 2.3 2.3 0 0 0 .468-.635q.189-.38.188-.883 0-.56-.246-1.048-.237-.486-.771-.792-.534-.305-1.362-.305-.862 0-1.411.347a2 2 0 0 0-.788.89q-.09.201-.148.413c-.111.414-.445.767-.874.767-.428 0-.784-.35-.71-.772q.106-.61.386-1.15.452-.875 1.37-1.394Q10.742 6 12.07 6q1.395 0 2.273.544.885.536 1.271 1.337T16 9.489q0 .817-.254 1.403-.255.577-.616.94-.353.363-.943.817-.468.372-.747.635-.27.264-.451.627-.075.149-.113.302c-.108.424-.422.787-.86.787-.437 0-.806-.356-.76-.79a2.95 2.95 0 0 1 .797-1.743"
                        ></path></svg
                    >
                </a>
            </li>
            <li>
                <a href="">
                    <svg
                        class="h-6 w-10"
                        viewBox="0 0 24 24"
                        xmlns="http://www.w3.org/2000/svg"
                        ><path
                            fill="currentColor"
                            d="M22 12c0 5.523-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2s10 4.477 10 10M9.254 20.047a8 8 0 0 1-.768-1.378c-.404-.91-.722-1.985-.935-3.169h-3.3a8.53 8.53 0 0 0 5.003 4.547m.603-1.988c.336.757.718 1.324 1.103 1.69.382.364.732.501 1.04.501s.658-.137 1.04-.5c.385-.367.767-.934 1.103-1.69.321-.723.588-1.59.78-2.56H9.076c.192.97.459 1.837.78 2.56ZM8.75 12q.001 1.038.103 2h6.294q.102-.962.103-2-.001-1.038-.103-2H8.853q-.102.962-.103 2m-1.405-2H3.737a8.5 8.5 0 0 0-.237 2c0 .689.082 1.359.237 2h3.608a21 21 0 0 1 0-4m1.732-1.5h5.845c-.19-.97-.458-1.837-.779-2.56-.336-.756-.718-1.323-1.103-1.69-.382-.363-.732-.5-1.04-.5s-.658.137-1.04.5c-.385.367-.767.934-1.103 1.69-.321.723-.588 1.59-.78 2.56m7.577 1.5a20.7 20.7 0 0 1 0 4h3.61a8.5 8.5 0 0 0 .236-2 8.5 8.5 0 0 0-.237-2zm3.094-1.5a8.53 8.53 0 0 0-5.002-4.547c.287.408.543.873.768 1.378.404.91.722 1.985.935 3.169h3.3Zm-12.197 0c.213-1.184.531-2.26.935-3.169.225-.505.48-.97.768-1.378A8.53 8.53 0 0 0 4.252 8.5zm7.963 10.169c-.225.505-.48.97-.768 1.378a8.53 8.53 0 0 0 5.002-4.547h-3.3c-.212 1.184-.53 2.26-.934 3.169"
                        ></path></svg
                    ></a
                >
            </li>
            <li>
                <a href="">
                    <svg
                        class="h-6 w-10"
                        viewBox="0 0 24 24"
                        xmlns="http://www.w3.org/2000/svg"
                        ><path
                            fill="currentColor"
                            d="M12 2C6.477 2 2 6.477 2 12s4.477 10 10 10 10-4.477 10-10S17.523 2 12 2M6.858 18.752c.605-1.868 2.722-3.24 5.142-3.24s4.537 1.372 5.142 3.24C15.712 19.844 13.933 20.5 12 20.5s-3.712-.656-5.142-1.748m11.469-1.095c-1.02-2.165-3.483-3.645-6.327-3.645s-5.307 1.48-6.327 3.645A8.46 8.46 0 0 1 3.5 12c0-4.687 3.813-8.5 8.5-8.5s8.5 3.813 8.5 8.5a8.46 8.46 0 0 1-2.173 5.657M12 6a3.5 3.5 0 1 0 0 7 3.5 3.5 0 0 0 0-7m0 5.5c-1.103 0-2-.897-2-2s.897-2 2-2 2 .897 2 2-.897 2-2 2"
                        ></path></svg
                    ></a
                >
            </li>
        </ul>
    </nav>
    <div
        id="menu-content"
        class="absolute left-0 top-full w-full h-[60vh] bg-white opacity-0 invisible transition-all duration-300 ease-in-out"
    >
        <div id="content-0" class="hidden">
            <VehiculosHeader />
        </div>
        <div id="content-1" class="hidden">
            <EnergiaHeader />
        </div>
        <div id="content-2" class="hidden">
            <CargaHeader />
        </div>
        <div id="content-3" class="hidden">
            <DescubrirHeader />
        </div>
        <!-- Aquí se insertará el contenido dinámico -->
    </div>

    <div
        id="menu-backdrop"
        class={`
            absolute bg-black/5 backdrop-blur-lg rounded
            left-[var(--left)] top-[var(--top)]
            w-[var(--width)] h-[var(--height)]
            transition-all duration-500
            ease-in-out  opacity-0 -z-10
        `}
    >
    </div>
</header>

<script>
    // Seleccionar los elementos del menú y el contenido
    const listItem = document.querySelectorAll("#landing-header li");
    const menuBackDrop = document.querySelector(
        "#menu-backdrop",
    ) as HTMLElement;
    const menuContent = document.querySelector("#menu-content") as HTMLElement;
    const contentSections = document.querySelectorAll("#menu-content > div");

    listItem.forEach((item, index) => {
        item.addEventListener("mouseenter", () => {
            // Obtener la posición del ítem de menú
            const { left, top, width, height } = item.getBoundingClientRect();

            // Actualizar propiedades del backdrop
            menuBackDrop.style.setProperty("--left", `${left}px`);
            menuBackDrop.style.setProperty("--top", `${top}px`);
            menuBackDrop.style.setProperty("--width", `${width}px`);
            menuBackDrop.style.setProperty("--height", `${height}px`);
            menuBackDrop.style.opacity = "1";
            menuBackDrop.style.visibility = "visible";

            // Ocultar todas las secciones primero
            contentSections.forEach((section) =>
                section.classList.add("hidden"),
            );

            // Mostrar el contenido correspondiente
            const contentToShow = document.querySelector(`#content-${index}`);
            contentToShow.classList.remove("hidden");
            menuContent.style.opacity = "1";
            menuContent.style.visibility = "visible";
        });

        item.addEventListener("mouseleave", () => {
            // Ocultar el backdrop
            menuBackDrop.style.opacity = "0";
            menuBackDrop.style.visibility = "hidden";

            // Ocultar el contenido si no está sobre el menú
            menuContent.style.opacity = "0";
            menuContent.style.visibility = "hidden";
        });
    });

    // Mantener el contenido visible si el mouse está sobre el div del contenido
    menuContent.addEventListener("mouseenter", () => {
        menuContent.style.opacity = "1";
        menuContent.style.visibility = "visible";
    });

    // Ocultar el contenido cuando el mouse salga del div del contenido
    menuContent.addEventListener("mouseleave", () => {
        menuContent.style.opacity = "0";
        menuContent.style.visibility = "hidden";
    });
</script>

<script>
    const header = document.querySelector("#landing-header") as HTMLElement;

    const observerOption = {
        root: null,
        rootMargin: "0px",
        threshold: 0.9,
    };

    const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
            const { isIntersecting } = entry;

            if (isIntersecting) {
                const color = entry.target.getAttribute("data-header-color");
                header.style.color = color;
            }
        });
    }, observerOption);

    const sections = document.querySelectorAll(".landing-section");
    sections.forEach((section) => observer.observe(section));
</script>
